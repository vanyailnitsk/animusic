name: Deploy to production

on:
  pull_request:
    branches:
      - main

jobs:
  backend-build-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file backend/pom.xml -DskipTests
      - name: Run tests
        run: mvn test --file backend/pom.xml -Dspring.profiles.active=testing
  backend-deploy:
    runs-on: ubuntu-latest
    needs: backend-build-test
    steps:
      - name: Deploy backend to animusic.me
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_ANIMUSIC_USER }}
          host: ${{ secrets.SSH_ANIMUSIC_HOST }}
          key: ${{ secrets.SSH_ANIMUSIC_KEY }}
          port: 22
          script: |
            cd ~/animusic/backend
            sh deploy.sh
            timeout 60 tail -f logs/app.log
            echo "Завершение запуска..."
  frontend-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    strategy:
      matrix:
        node-version: [ 18.x, 20.x, 22.x ]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build
  frontend-deploy:
    runs-on: ubuntu-latest
    needs: frontend-build
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Restart nginx
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.SSH_ANIMUSIC_USER }}
          host: ${{ secrets.SSH_ANIMUSIC_HOST }}
          key: ${{ secrets.SSH_ANIMUSIC_KEY }}
          port: 22
          script: |
            cd ~/animusic/frontend
            sh deploy.sh
            echo "Success on frontend-app deploy"
          
    
